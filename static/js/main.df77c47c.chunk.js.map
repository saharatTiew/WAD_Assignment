{"version":3,"sources":["RegistrationForm.js","App.js","reportWebVitals.js","index.js"],"names":["provinceData","require","RegistrationForm","useForm","register","handleSubmit","control","watch","errors","useState","province","setProvince","amphur","setAmphur","amphurList","setAmphurList","onSubmit","data","console","log","Row","Col","type","placeholder","ref","required","name","value","options","onChange","obj","getOptionLabel","x","getOptionValue","id","Register","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df77c47c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\nimport Select from \"react-select\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nconst provinceData = require('./provinces.json')\r\n\r\nexport default function RegistrationForm() {\r\n  const { register, handleSubmit, control, watch, errors } = useForm();\r\n  const [province, setProvince] = useState(provinceData[0])\r\n  const [amphur, setAmphur] = useState(provinceData[0].amphur[0])\r\n  const [amphurList, setAmphurList] = useState()\r\n\r\n  const handleProvinceChange = (obj) => {\r\n    // console.log('handleProvinceChange', obj)\r\n    setProvince(obj)\r\n    setAmphur(null)\r\n    setAmphurList(obj.amphur)\r\n  }\r\n\r\n  const handleAmphurChange = (obj) => {\r\n    // console.log('handleAmphurChange', obj)\r\n    setAmphur(obj)\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    data = {...data, province, amphur}\r\n    console.log('onSubmit', data)\r\n    // alert(\"Registered\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col>\r\n            <label>Name</label>\r\n          </Col>\r\n          <Col>\r\n            <input type=\"text\" placeholder=\"Name\" ref={register({ required: true })} name=\"name\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label>E-mail</label>\r\n          </Col>\r\n          <Col>\r\n            <input type=\"email\" placeholder=\"E-mail\" ref={register({ required: true })} name=\"email\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label>Password</label>\r\n          </Col>\r\n          <Col>\r\n            <input type=\"password\" placeholder=\"Password\" ref={register({ required: true })} name=\"password\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label>Confirmed Password</label>\r\n          </Col>\r\n          <Col>\r\n            <input type=\"password\" placeholder=\"Confirmed Password\" ref={register({ required: true })} name=\"password2\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label>Address</label>\r\n          </Col>\r\n          <Col>\r\n            <input type=\"text\" placeholder=\"Address\" ref={register({ required: true })} name=\"address\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label>Province</label>\r\n          </Col>\r\n          <Col>\r\n            <Select\r\n              name=\"province\"\r\n              placeholder=\"Select Province\"\r\n              value={province}\r\n              options={provinceData}\r\n              onChange={handleProvinceChange}\r\n              getOptionLabel={x => x.name}\r\n              getOptionValue={x => x.id}\r\n            />\r\n\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label>Amphur</label>\r\n          </Col>\r\n          <Col>\r\n            <Select\r\n              name=\"amphur\"\r\n              placeholder=\"Select Amphur\"\r\n              value={amphur}\r\n              options={amphurList}\r\n              onChange={handleAmphurChange}\r\n              getOptionLabel={x => x.name}\r\n              getOptionValue={x => x.id}\r\n            />\r\n\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button type=\"submit\">Submit</button>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n\r\n    </>\r\n  )\r\n}","import RegistrationForm from './RegistrationForm'\nimport { Container } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nexport default function Register() {\n  return (\n\n    <Container>\n      <RegistrationForm />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}